{"version":3,"sources":["./src/app/quote/quote.component.ts","./src/app/quote/quote.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/quote-form/quote-form.component.ts","./src/app/quote-form/quote-form.component.html","./src/app/app-routing.module.ts","./src/app/quote.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Quote } from '../quote'\n\n@Component({\n  selector: 'app-quote',\n  templateUrl: './quote.component.html',\n  styleUrls: ['./quote.component.css']\n})\nexport class QuoteComponent implements OnInit {\n\n  quotes: Quote[] = [\n    new Quote(\"breens\",\"tom\",\"Work hard\"),\n    new Quote(\"breens\",\"tom\",\"Work hard\"),\n    new Quote(\"breens\",\"tom\",\"Work hard\"),\n    new Quote(\"breens\",\"tom\",\"Work hard\"),\n  ];\n\n  addNewQuote(quote:Quote) {\n    this.quotes.push(quote);\n  }\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-9\">\n            <ul>\n                <li *ngFor = 'let quote of quotes'>\n                    <div class=\"card\" style=\"width: 26rem;\">\n                        <div class=\"card-body\">\n                          <h5 class=\"card-text\">Author:{{quote.author}}</h5>\n                          <p class=\"card-text\">Publisher:{{quote.publisher}}</p>\n                          <p class=\"card-text\">Publisher:{{quote.content}}</p>\n                        </div>\n                      </div>\n                </li>\n            </ul>\n        </div>\n        <div class=\"col-md-3\">\n            <app-quote-form (addQuote)=\"addNewQuote($event)\"></app-quote-form>\n        </div>\n    </div>\n</div>\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = \"Quote\"\n}\n","<app-quote></app-quote>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { QuoteComponent } from './quote/quote.component';\nimport { QuoteFormComponent } from './quote-form/quote-form.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuoteComponent,\n    QuoteFormComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, EventEmitter,Output } from '@angular/core';\nimport { Quote } from '../quote'\n\n@Component({\n  selector: 'app-quote-form',\n  templateUrl: './quote-form.component.html',\n  styleUrls: ['./quote-form.component.css']\n})\nexport class QuoteFormComponent implements OnInit {\n   newQuote = new Quote(\"\",\"\",\"\");\n\n  @Output() addQuote = new EventEmitter<Quote>();\n\n  publishQuote(){\n    this.addQuote.emit(this.newQuote);\n  }\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n    <h2 class=\"text-center\">Publish Quote</h2>\n    <hr>\n    <form (ngSubmit)='publishQuote()' #quoteForm='ngForm'>\n        <div class=\"form-group\">\n  \n            <label for=\"author\">Author</label>\n            <input type=\"text\" required class=\"form-control\" id=\"author\" [(ngModel)]=\"newQuote.author\" name=\"author\" #author=\"ngModel\">\n        \n        </div>\n\n        <div class=\"form-group\">\n  \n            <label for=\"publisher\">Publisher</label>\n            <input type=\"text\" required class=\"form-control\" id=\"publisher\" [(ngModel)]=\"newQuote.publisher\" name=\"publisher\" #publisher=\"ngModel\">\n  \n        </div>\n\n        <div class=\"form-group\">\n  \n            <label for=\"content\">Quote</label>\n            <textarea class=\"form-control\" id=\"content\" rows=\"4\" [(ngModel)]=\"newQuote.content\" name=\"content\" required #content=\"ngModel\"></textarea>\n  \n        </div>\n        <div class=\"form-group\">\n            <button type=\"submit\">Publish</button>\n        </div>\n    </form>\n  </div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export class Quote {\n    constructor(\n    public author:string,\n    public publisher:string,\n    public content:string) {\n\n    }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}